{"version":3,"sources":["modules/projectCard/index.jsx","utils.js","header.jsx","footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tag","props","className","name","LinkButton","style","rel","target","href","ExtraHead","gitRepo","size","src","alt","srcset","index","console","log","Object","keys","tags","links","authors","image","process","id","height","fullName","map","tag","i","context","link","author","yaml","require","path","a","fetch","then","r","text","load","parseResult","Header","footer","App","useState","projects","setProjects","useEffect","yamlParser","res","project","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3761e586.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\nimport { FaGithub } from 'react-icons/fa'\n\nfunction Tag(props) {\n    return (\n        <span className=\"tag me-1 p-1\">{props.name}</span>\n    )\n}\n\nfunction LinkButton(props) {\n    let { style = 'btn-primary' } = props\n    return (\n        <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href={props.href}\n            className={`btn btn-sm m-1 ${style}`}>{props.name}\n        </a>\n    )\n}\n\nfunction ExtraHead(props) {\n    if (props.gitRepo === \"\") {\n        return <></>\n    }\n    return (\n        <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href={`https://github.com/${props.gitRepo}`}\n            className=\"extra-head\"\n        >\n            <FaGithub className=\"me-1\" size={20} />\n            <img className=\"me-1\" src={`https://img.shields.io/github/stars/${props.gitRepo}?color=green`} alt=\"\" srcset=\"\" />\n        </a>\n        // <span className=\"extra-head\">props</span>\n    )\n}\n\nexport default function index(props) {\n    console.log(Object.keys(props))\n    let { tags = [], links = [], authors = [], image = \"/assets/images/lab-logo.png\", gitRepo = '' } = props\n    if (image[0] === '/') { // 如果圖片存放在本地\n        image = process.env.PUBLIC_URL + image\n    }\n    return (\n        <div id=\"ProjCard\" className=\"card\" style={{ height: '100%' }}>\n            <div className=\"main-img-container\">\n                <ExtraHead gitRepo={gitRepo} />\n                <img src={image} className=\"main-img\" alt=\"...\" />\n            </div>\n\n            <div className=\"card-body\">\n                <hr className=\"mb-2\" />\n                <h5 className=\"card-title\">{props.fullName}</h5>\n                {tags.map((tag, i) => {\n                    return <Tag key={i} name={tag} />\n                })}\n                <p className=\"card-text mt-1 text-block-config\">{props.context}</p>\n                <div className=\"card-buttons\">\n                    {links.map((link, i) => {\n                        return <LinkButton key={i} {...link} />\n                    })}\n                </div>\n            </div>\n            <div className=\"card-footer\">\n                <div className=\"w-100 text-center\">\n                    {authors.map((author, i) => {\n                        return (\n                            <a key={i} className=\"me-1 author-link\" href={author.link}>{author.name}</a>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n","const yaml = require('js-yaml');\n\nexport async function yamlParser(path){\n    let parseResult = await fetch(process.env.PUBLIC_URL + path)\n    .then(r => r.text())\n    .then(text => {\n      return yaml.load(text)\n    });\n    // console.log(parseResult)\n    return parseResult\n}","export default function Header() {\n    return (\n        <nav className=\"navbar navbar-light bg-light mb-3\">\n            <div className=\"container-fluid\">\n                <a \n                href=\"https://nlpnchu.org\" \n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"navbar-brand mb-0 h1 ps-3\">中興大學自然語言處理實驗室</a>\n                <span className=\"float-end pe-3\">Projects</span>\n            </div>\n        </nav>\n    )\n}","import { MdLocationOn,MdPhone } from 'react-icons/md'\nexport default function footer(){\n    return(\n        <footer id=\"Footer\" className=\"text-center p-2\">\n            <MdLocationOn/> 中興大學 理學大樓-721室 <br />\n            <MdPhone/> 04-22840497 #721<br />\n            Copyright © 2021 NCHU NLP Lab. All rights reserved.\n        </footer>\n    )\n}","import { useEffect, useState } from 'react'\nimport ProjectCard from './modules/projectCard'\nimport { yamlParser } from './utils'\nimport Header from './header'\nimport Footer from './footer'\n\nfunction App() {\n\n  const [projects, setProjects] = useState([])\n  useEffect(() => {\n    yamlParser('/assets/yamls/project.yaml')\n      .then((res) => {\n        // console.log(res)\n        setProjects(res)\n      })\n  }, [])\n\n  return (\n    <>\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"row\">\n          {projects.map((project, i) => {\n            console.log(project)\n            return (\n              <div className=\"col-md-4 col-xl-3 col-12 mt-3\" key={i}>\n                <ProjectCard {...project} />\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}